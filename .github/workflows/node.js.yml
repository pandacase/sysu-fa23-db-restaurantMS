# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Server CI/CD with Docker

on:
  push:
    branches: [ "server" ]
  pull_request:
    branches: [ "server" ]
    
jobs:
  deploy-on-server:
    environment: VPS_ENVIR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout server code
      uses: actions/checkout@v4

    # Deploy server app on remote server
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_IP_ADDRESS }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
        source: "./*"
        target: /root/server

    - name: Deploy, start the new backend app
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_IP_ADDRESS }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
        script: |
          whoami
          pm2 stop app
          pm2 delete app
          rm -rf /var/www/server/*
          mv /root/server/* /var/www/server/
          cd /var/www/server
          pm2 start src/app.js

  push-to-dockerhub:
    environment: VPS_ENVIR
    runs-on: ubuntu-latest

    steps:
    # Build and Push Docker images
    # Images can be pulled from DockerHub on remote servers
    - name: Checkout client code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      uses:
        docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/rest-server:latest

